version: '3'

volumes:
  es_volume:
  neo4j_volume:

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION}
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es_volume:/usr/share/elasticsearch/data
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      no_proxy: ${no_proxy}
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      network.host: 0.0.0.0
      node.max_local_storage_nodes: 1
      cluster.name: docker-elk-cyber-cluster
      discovery.type: single-node
      # https://github.com/spinscale/elasticsearch-ingest-opennlp#usage
      ingest.opennlp.model.file.names: en-ner-persons.bin
      ingest.opennlp.model.file.dates: en-ner-dates.bin
      ingest.opennlp.model.file.locations: en-ner-locations.bin

  
  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: ${ELK_VERSION}
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
    volumes:
      - ./logstash/config:/etc/logstash/conf.d
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    environment:
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      no_proxy: ${no_proxy}
  
  provisioner:
    build:
      context: provisioner/
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
    volumes:
      - "./provisioner/initial_import:/initial_import"
    depends_on:
      - elasticsearch
  
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:${ELK_VERSION}
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      kibana.defaultAppId: dashboard/Main_Dashboard
  
  es2neo4j:
    build:
      context: es2neo4j/
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
    depends_on:
      - elasticsearch
      - neo4j
  
  neo4j:
    build:
      context: neo4j/
      args:
        http_proxy: ${http_proxy}
        https_proxy: ${https_proxy}
        no_proxy: ${no_proxy}
    volumes:
      - neo4j_volume:/data
    ports:
      - "7474:7474"
      - "7473:7473"
      - "7687:7687"
    depends_on:
      - elasticsearch
    environment:
      NEO4J_AUTH: none
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      no_proxy: ${no_proxy}
  
  decorator:
    image: awesomeinc/neo4j-decorator
    ports:
      - "3000:3000"
    depends_on:
      - neo4j
